<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "booking_data".
 *
 * @property string $type
 * @property string $jenis_layanan
 * @property string $tanggal_kedatangan
 * @property string $jam_kedatangan
 * @property string $nama_perusahaan
 * @property string $nama_penanggungjawab
 * @property string $nomor_penerbangan
 * @property string $nomor_telepon
 * @property integer $jumlah_penumpang
 * @property string $email
 * @property string $creatad_at
 * @property integer $id
 * @property string $aliasModel
 */
abstract class BookingData extends \yii\db\ActiveRecord
{
    /**
     * BaseModel rules. 
     **/
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'booking_data';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \app\components\behaviors\UUIDBehavior::class,
                'model' => get_called_class(),
                'primaryKey' => 'id',
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['type', 'jenis_layanan', 'tanggal_kedatangan', 'jam_kedatangan', 'nama_perusahaan', 'nama_penanggungjawab', 'nomor_penerbangan', 'nomor_telepon', 'jumlah_penumpang', 'email'], 'required'],
            [['tanggal_kedatangan', 'jam_kedatangan', 'creatad_at'], 'safe'],
            [['jumlah_penumpang'], 'integer'],
            [['type'], 'string', 'max' => 20],
            [['jenis_layanan'], 'string', 'max' => 100],
            [['nama_perusahaan', 'nama_penanggungjawab', 'nomor_penerbangan'], 'string', 'max' => 150],
            [['nomor_telepon'], 'string', 'max' => 35],
            [['email'], 'string', 'max' => 250],
            [['id'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'type' => Yii::t('models', 'Tipe'),
            'jenis_layanan' => Yii::t('models', 'Jenis Layanan'),
            'tanggal_kedatangan' => Yii::t('models', 'Tanggal'),
            'jam_kedatangan' => Yii::t('models', 'Jam'),
            'nama_perusahaan' => Yii::t('models', 'Nama Perusahaan'),
            'nama_penanggungjawab' => Yii::t('models', 'Nama Penanggungjawab'),
            'nomor_penerbangan' => Yii::t('models', 'Nomor Penerbangan'),
            'nomor_telepon' => Yii::t('models', 'Nomor Telepon'),
            'jumlah_penumpang' => Yii::t('models', 'Jumlah Penumpang'),
            'email' => Yii::t('models', 'Email'),
            'creatad_at' => Yii::t('models', 'Dibuat pada'),
        ];
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'type',
            'jenis_layanan',
            'tanggal_kedatangan',
            'jam_kedatangan',
            'nama_perusahaan',
            'nama_penanggungjawab',
            'nomor_penerbangan',
            'nomor_telepon',
            'jumlah_penumpang',
            'email',
            'creatad_at',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['type'])) :
            unset($parent['type']);
            $parent['type'] = function ($model) {
                return $model->type;
            };
        endif;
        if (isset($parent['jenis_layanan'])) :
            unset($parent['jenis_layanan']);
            $parent['jenis_layanan'] = function ($model) {
                return $model->jenis_layanan;
            };
        endif;
        if (isset($parent['tanggal_kedatangan'])) :
            unset($parent['tanggal_kedatangan']);
            $parent['tanggal_kedatangan'] = function ($model) {
                return \app\helpers\DateTimeHelper::toReadableDate($model->tanggal_kedatangan, false);
            };
        endif;
        if (isset($parent['jam_kedatangan'])) :
            unset($parent['jam_kedatangan']);
            $parent['jam_kedatangan'] = function ($model) {
                return $model->jam_kedatangan;
            };
        endif;
        if (isset($parent['nama_perusahaan'])) :
            unset($parent['nama_perusahaan']);
            $parent['nama_perusahaan'] = function ($model) {
                return $model->nama_perusahaan;
            };
        endif;
        if (isset($parent['nama_penanggungjawab'])) :
            unset($parent['nama_penanggungjawab']);
            $parent['nama_penanggungjawab'] = function ($model) {
                return $model->nama_penanggungjawab;
            };
        endif;
        if (isset($parent['nomor_penerbangan'])) :
            unset($parent['nomor_penerbangan']);
            $parent['nomor_penerbangan'] = function ($model) {
                return $model->nomor_penerbangan;
            };
        endif;
        if (isset($parent['nomor_telepon'])) :
            unset($parent['nomor_telepon']);
            $parent['nomor_telepon'] = function ($model) {
                return $model->nomor_telepon;
            };
        endif;
        if (isset($parent['jumlah_penumpang'])) :
            unset($parent['jumlah_penumpang']);
            $parent['jumlah_penumpang'] = function ($model) {
                return $model->jumlah_penumpang;
            };
        endif;
        if (isset($parent['email'])) :
            unset($parent['email']);
            $parent['email'] = function ($model) {
                return $model->email;
            };
        endif;
        if (isset($parent['creatad_at'])) :
            unset($parent['creatad_at']);
            $parent['creatad_at'] = function ($model) {
                return $model->creatad_at;
            };
        endif;



        return $parent;
    }


    public static function faker($count = 10)
    {
        $faker = \Faker\Factory::create();
        $faker->addProvider(new \app\components\faker\provider\MyImage($faker));
        $data = [];
        $maxId = static::find()->max('id');

        // relational data
        for ($i = 0; $i < $count; $i++) {
            $data[] = [
                "type" => $faker->text(),
                "jenis_layanan" => $faker->text(),
                "tanggal_kedatangan" => $faker->dateTime(),
                "jam_kedatangan" => $faker->text(),
                "nama_perusahaan" => $faker->name,
                "nama_penanggungjawab" => $faker->name,
                "nomor_penerbangan" => $faker->text(),
                "nomor_telepon" => $faker->text(),
                "jumlah_penumpang" => $faker->randomNumber(),
                "email" => $faker->freeEmail,
                "creatad_at" => $faker->dateTime(),
                "id" => $faker->unique()->numberBetween($maxId, $maxId + $count),
            ];
        }
        return $data;
    }
}
